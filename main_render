# Spacefruit Render Pipeline Code
import math

def setRenderOrigin(app, posX = 0.5, posY = 0.5):
    app.renderOrigin = (app.width * posX, app.height * posY)

def renderTranslate(x, y, cx, cy):
    return x - cx, y - cy

def renderRotate(x, y, theta):
    # We can now assume the center is 0
    radius = distance(x, y, 0, 0)
    return radius * math.cos(math.radians(theta)), radius * math.sin(math.radians(theta))

def distance(x1, y1, x2, y2):
    return( (y2 - y1) ** 2 + (x2 - x1) ** 2 ) ** 0.5
 
def renderCoords(app, posTuple): # The master renderer
    xReal, yReal = posTuple[0], posTuple[1]
    thetaReal = posTuple[2]
    
    xCam, yCam = app.playerPos[0], app.playerPos[1]
    thetaCam = app.playerPos[2]
    
    # Shift the coordinates in realspace to put the camera at origin
    tx, ty = renderTranslate(xReal, yReal, xCam, yCam)
    rx, ry = renderRotate(tx, ty, thetaCam)
    finalx, finaly = tx, ty
    
    # Shift to render scheme
    xRender, yRender = app.renderOrigin[0] + finalx, app.renderOrigin[1] - finaly
    return xRender, yRender